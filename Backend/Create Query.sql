
CREATE TABLE MEMBERS (
	MEMBERID	VARCHAR(20)	PRIMARY KEY,
	MEMBERPWD	VARCHAR(100)	NOT NULL,
	MEMBERNICKNAME	VARCHAR(50)	NOT NULL,
	MEMBEREMAIL	VARCHAR(30)	NULL,
	MEMBERPHONE	VARCHAR(20)	NULL,
	MEMBERCOIN	INTEGER	NOT NULL,
	MEMBERMAINADDR	VARCHAR(100)	NULL,
	MEMBERDETAILADDR	VARCHAR(100)	NULL,
	MEMBERZIPCODE	INTEGER	NULL,
	MEMBERGENDER	VARCHAR(10)	NULL,
	MEMBERNAME	VARCHAR(20)	NULL,
	MEMBERGRADE	VARCHAR(50)	NOT NULL,
	SALT	VARCHAR(100)	NOT NULL
);

CREATE TABLE GOODS (
	GOODSSEQ	INTEGER	PRIMARY KEY,
	GOODSNAME	VARCHAR(20)	NOT NULL,
	GOODSPRICE	INTEGER	NOT NULL,
	GOODSCATEGORY	VARCHAR(20)	NOT NULL,
	GOODSCOUNT	INTEGER	NOT NULL,
	GOODSVIEW	INTEGER	NOT NULL,
	GOODSRATING	FLOAT	NOT NULL,
	GOODSCONTENT	TEXT	NULL
);

CREATE TABLE RECIPE (
	RECIPESEQ	INTEGER	PRIMARY KEY,
	MEMBERID	VARCHAR(20)	NOT NULL,
	RECIPETITLE	VARCHAR(50)	NOT NULL,
	RECIPECONTENT	TEXT	NOT NULL,
	RECIPEBIGCATEGORY	VARCHAR(20)	NOT NULL,
	RECIPESMALLCATEGORY	VARCHAR(50)	NOT NULL,
	RECIPEGOODSTAG	VARCHAR(50)	NOT NULL,
	RECIPEPRICE	INTEGER	NOT NULL,
	RECIPERATING	FLOAT	NOT NULL
);

CREATE TABLE RECIPELIKE (
	LIKESEQ	INTEGER	PRIMARY KEY,
	RECIPESEQ	INTEGER	NOT NULL,
	MEMBERID	VARCHAR(20)	NOT NULL
);

CREATE TABLE RATING (
	RATINGSEQ	INTEGER	PRIMARY KEY,
    MEMBERID	VARCHAR(20) NOT NULL,
	DOCSSEQ	INTEGER	NOT NULL,
	RATINGCATEGORY	VARCHAR(20)	NOT NULL,
	RATINGSCORE	INTEGER	NOT NULL,
	RATINGCOMMENT	VARCHAR(1000)	NOT NULL
);

CREATE TABLE PAYMENT (
	PAYMENTSEQ	INTEGER	PRIMARY KEY,
	MEMBERID	VARCHAR(20)	NOT NULL,
	PAYMENTPAY	INTEGER	NOT NULL,
	PAYMENTDATE	DATE	NOT NULL,
	PAYMENTDEL	INTEGER	NULL,
	PAYMENTMAINADDR	VARCHAR(100)	NULL,
	PAYMENTDETAILADDR	VARCHAR(100)	NULL,
	PAYMENTZIPCODE	INTEGER	NULL,
	PAYMENTCATEGORY	VARCHAR(20)	NOT NULL,
	PAYMENTCOUNT	INTEGER	NOT NULL
);

CREATE TABLE PAYMENTLIST (
	PAYMENTLISTSEQ	INTEGER	PRIMARY KEY,
	PAYMENTSEQ INTEGER NOT NULL,
	MEMBERID VARCHAR(20) NOT NULL,
	PURCHASEPRODUCTSEQ	INTEGER	NOT NULL,
	PAYMENTLISTCATEGORY	VARCHAR(20)	NOT NULL,
	PAYMENTCOUNT	INTEGER	NOT NULL,
	PAYMENTLISTPAY	INTEGER	NOT NULL
);

CREATE TABLE `PHOTO` (
	`PHOTOSEQ`	INTEGER	PRIMARY KEY,
	`RECIPESEQ`	INTEGER	NOT NULL,
	`GOODSSEQ`	INTEGER	NOT NULL,
	`PHOTOTITLE`	VARCHAR(100)	NULL,
	`PHOTOCONTENT`	VARCHAR(100)	NULL,
	`PHOTOCATEGORY`	VARCHAR(20)	NULL,
	`PHOTOURL`	VARCHAR(400)	NULL
);

CREATE TABLE `COINTRANSACTION` (
	`COINTRANSACTIONSEQ` INTEGER PRIMARY KEY,
	`MEMBERID`	VARCHAR(20)	NOT NULL,
    `DOCSSEQ` INTEGER NOT NULL,
	`COINCOUNT`	INTEGER	NOT NULL,
	`COININOUT`	VARCHAR(10)	NOT NULL,
    `COINDATE` DATE NOT NULL
);

-- 제약조건 추가
ALTER TABLE `RECIPE` ADD CONSTRAINT `FK_MEMBERS_TO_RECIPE_1` FOREIGN KEY (
	`MEMBERID`
)
REFERENCES MEMBERS (
	MEMBERID
);

ALTER TABLE RECIPELIKE ADD CONSTRAINT FK_RECIPE_TO_RECIPELIKE_1 FOREIGN KEY (
	RECIPESEQ
)
REFERENCES RECIPE (
	RECIPESEQ
);

ALTER TABLE RECIPELIKE ADD CONSTRAINT FK_RECIPE_TO_RECIPELIKE_2 FOREIGN KEY (
	MEMBERID
)
REFERENCES RECIPE (
	MEMBERID
);

ALTER TABLE RATING ADD CONSTRAINT FK_MEMBERS_TO_RATING FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBERS (
	MEMBERID
);

ALTER TABLE PAYMENT ADD CONSTRAINT FK_MEMBERS_TO_PAYMENT_1 FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBERS (
	MEMBERID
);

ALTER TABLE `PAYMENTLIST` ADD CONSTRAINT `FK_PAYMENT_TO_PAYMENTLIST` FOREIGN KEY (
	`PAYMENTSEQ`
)
REFERENCES `PAYMENT` (
	`PAYMENTSEQ`
);

ALTER TABLE `PAYMENTLIST` ADD CONSTRAINT `FK_MEMBERS_TO_PAYMENTLIST` FOREIGN KEY (
	`MEMBERID`
)
REFERENCES `MEMBERS` (
	`MEMBERID`
);

ALTER TABLE `COINTRANSACTION` ADD CONSTRAINT `FK_MEMBERS_TO_COINTRANSACTION` FOREIGN KEY (
	`MEMBERID`
)
REFERENCES `MEMBERS` (
	`MEMBERID`
);

-- TABLE 삭제 명령어
DROP TABLE COINTRANSACTION;
DROP TABLE PAYMENTLIST;
DROP TABLE PAYMENT;
DROP TABLE PHOTO;
DROP TABLE RATING;
DROP TABLE RECIPELIKE;
DROP TABLE RECIPE;
DROP TABLE MEMBERS;
DROP TABLE GOODS;